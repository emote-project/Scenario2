package uk.co.emote;

import javax.persistence.*;

import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "learner") // @Table is optional, but "user" is a keyword in many SQL variants 
//@NamedQuery(name = "Learner.findByName", query = "select l from Learner l where l.name = :name")
public class Learner {
	 @Id // @Id indicates that this it a unique primary key
	    @GeneratedValue // @GeneratedValue indicates that value is automatically generated by the server
	    private int id;

	    @Column(length = 32, unique = false)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private String firstName;
	    
	    @Column(length = 32, unique = false)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private String middleName;

	    @Column(length = 32, unique = false)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private String lastName;
	    
	    @Column(length = 32, unique = true)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private Integer participantId;
	    
	    @Column(length = 32, unique = true)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private String nextTellUserId;
	    
	    @Column(length = 32, unique = true)
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private String nextTellUserName;
	    
	    @Column
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private char sex;
	    
	    @Column
	    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
	    private Date birth;

		@OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	    private Set<Session> sessions = new HashSet<Session>();

		@OneToMany
	    private Set<Utterance> utterance = new HashSet<Utterance>();

		
		@OneToMany
		private Set<DbCompetency> dbCompetencies  = new HashSet<DbCompetency>();
		 
		
		@OneToMany
		private Set<EnercitiesGameInfoDB> enercitiesGameInfos  = new HashSet<EnercitiesGameInfoDB>();
		 
		
		@Column(length = 32)
		private Integer scenario1Difficulty;
		  
		
		public Set<EnercitiesGameInfoDB> getEnercitiesGameInfos() {
			return enercitiesGameInfos;
		}

		public void setEnercitiesGameInfos(Set<EnercitiesGameInfoDB> enercitiesGameInfos) {
			this.enercitiesGameInfos = enercitiesGameInfos;
		}

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}

		public String getFirstName() {
			return firstName;
		}

		public void setFirstName(String firstName) {
			this.firstName = firstName;
		}

		public String getLastName() {
			return lastName;
		}

		public void setLastName(String lastName) {
			this.lastName = lastName;
		}

		public String getNextTellUserId() {
			return nextTellUserId;
		}

		public void setNextTellUserId(String nextTellUserId) {
			this.nextTellUserId = nextTellUserId;
		}

		public String getNextTellUserName() {
			return nextTellUserName;
		}

		public void setNextTellUserName(String nextTellUserName) {
			this.nextTellUserName = nextTellUserName;
		}

		public char getSex() {
			return sex;
		}

		public void setSex(char sex) {
			this.sex = sex;
		}

		public Date getBirth() {
			return birth;
		}

		public void setBirth(Date birth) {
			this.birth = birth;
		}

		public String getMiddleName() {
			return middleName;
		}

		public void setMiddleName(String middleName) {
			this.middleName = middleName;
		}

		public Set<Session> getSessions() {
			return sessions;
		}

		public void setSessions(Set<Session> sessions) {
			this.sessions = sessions;
		}

		public Set<Utterance> getUtterance() {
			return utterance;
		}

		public void setUtterance(Set<Utterance> utterance) {
			this.utterance = utterance;
		}

		public Set<DbCompetency> getDbCompetencies() {
			return dbCompetencies;
		}

		public void setDbCompetencies(Set<DbCompetency> dbCompetencies) {
			this.dbCompetencies = dbCompetencies;
		}

		public Integer getParticipantId() {
			return participantId;
		}

		public void setParticipantId(Integer participantId) {
			this.participantId = participantId;
		}

		public Integer getScenario1Difficulty() {
			return scenario1Difficulty;
		}

		public void setScenario1Difficulty(Integer scenario1Difficulty) {
			this.scenario1Difficulty = scenario1Difficulty;
		}
	
	    
}
